# -*- coding: utf-8 -*-
"""antosophia_model_v2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZkkMHHe7ucYa_eQRWY2zSwP-PsBXuJoC
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report
# Loading dataset
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data"
names = ['id', 'clump_thickness', 'uniformity_cell_size', 'uniformity_cell_shape', 'marginal_adhesion', 'single_epithelial_cell_size', 'bare_nuclei', 'bland_chromatin', 'normal_nucleoli', 'mitoses', 'class']
data = pd.read_csv(url, names=names)

# Displaying first few rows
print(data.head())

# Dropping missing values
data.replace('?', -99999, inplace=True)
data.drop(['id'], axis=1, inplace=True)

# Converting bare_nuclei to numeric
data['bare_nuclei'] = pd.to_numeric(data['bare_nuclei'])

# Splitting dataset into features (X) and target (y)
X = data.drop(['class'], axis=1)
y = data['class']

# Splitting the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardizing the features
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

from sklearn.svm import SVC
# Train the SVM model
svm_model = SVC()
svm_model.fit(X_train, y_train)

# Making predictions
y_pred_svm = svm_model.predict(X_test)

# Evaluating model performance
accuracy_svm = accuracy_score(y_test, y_pred_svm)
report_svm = classification_report(y_test, y_pred_svm)

print("SVM Model Accuracy:", accuracy_svm)
print("SVM Model Classification Report:\n", report_svm)